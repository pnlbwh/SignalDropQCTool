function mat2DWInhdr(fn, dn, nrrdStructure, type)

% fn = file name
% dn = directory name
% nrrdStrcuture = the structure containing all the info
% type = what format to use, if not 'pnl' format, pass
% 'float' or 'uint16'.
% 
% fullfile(dn, [fn '.nhdr'])
% 
if ~strcmp(type,'headerOnly')
 fid1 = fopen(fullfile(dn, [fn '.raw']), 'wb');
end

  if strcmp(type,'pnl')
      fid = fopen(fullfile(dn, [fn '.nhdr']), 'w');
      fprintf(fid, ['NRRD0005\n' ...
                    '# Complete NRRD file format specification at:\n' ...
                    '# http://teem.sourceforge.net/nrrd/format.html\n' ...
                    'type: float\n' ...
                    'dimension: 4\n' ...
                    'space: left-posterior-superior\n' ...
                    'sizes: %d %d %d %d\n' ...
                    'space directions: (1.6667,0,0) (0,1.6667,0) (0,0,-1.7) none\n' ...
                    'centerings: cell cell cell ???\n',...
                    'kinds: space space space list\n' ...
                    'endian: little\n' ...
                    'encoding: gzip\n' ...
                    'space origin: (-119.169,-119.169,71.4)\n' ...
                    'measurement frame: (-1,0,0) (0,-1,0) (0,0,1)\n',...
                    'space units: "mm" "mm" "mm"\n',...
                    'data file: %s.raw.gz\n'...
                    'modality:=DWMRI\n' ...
                    'DWMRI_b-value:=900\n'], ...
              size(nrrdStructure.data,1), size(nrrdStructure.data,2), size(nrrdStructure.data,3), size(nrrdStructure.data,4),fn);

      for j = 1:size(nrrdStructure.gradients,1)
        fprintf(fid,'DWMRI_gradient_%04d:= %f %f %f\n',j-1,nrrdStructure.gradients(j,1),nrrdStructure.gradients(j,2),nrrdStructure.gradients(j,3));
      end
      fclose(fid);
      fwrite(fid1, single(nrrdStructure.data), 'single');
  end


  if strcmp(type,'float')
      sd = nrrdStructure.spacedirections;
      orig = nrrdStructure.spaceorigin;
      fid = fopen(fullfile(dn, [fn '.nhdr']), 'w');
      fprintf(fid, ['NRRD0005\n' ...
                    '# Complete NRRD file format specification at:\n' ...
                    '# http://teem.sourceforge.net/nrrd/format.html\n' ...
                    'type: float\n' ...
                    'dimension: 4\n' ...
                    'space: left-posterior-superior\n' ...
                    'sizes: %d %d %d %d\n' ...
                    'space directions: (%f,%f,%f) (%f,%f,%f) (%f,%f,%f) none\n' ...
                    'centerings: cell cell cell ???\n',...
                    'kinds: space space space list\n' ...
                    'endian: little\n' ...
                    'encoding: gzip\n' ...
                    'space origin: (%f,%f,%f)\n' ...
                    'measurement frame: (1,0,0) (0,1,0) (0,0,1)\n',...
                    'space units: "mm" "mm" "mm"\n',...
                    'data file: %s.raw.gz\n'...
                    'modality:=DWMRI\n' ...
                    'DWMRI_b-value:=%d\n'], ...
              size(nrrdStructure.data,1), size(nrrdStructure.data,2), size(nrrdStructure.data,3), size(nrrdStructure.data,4),...
              sd(1,1),sd(2,1),sd(3,1),sd(1,2),sd(2,2),sd(3,2),sd(1,3),sd(2,3),sd(3,3),orig(1),orig(2),orig(3),fn,nrrdStructure.bvalue);

      for j = 1:size(nrrdStructure.gradients,1)
        fprintf(fid,'DWMRI_gradient_%04d:= %f %f %f\n',j-1,nrrdStructure.gradients(j,1),nrrdStructure.gradients(j,2),nrrdStructure.gradients(j,3));
      end
      fclose(fid);
      fwrite(fid1, single(nrrdStructure.data), 'single');
  end

  if strcmp(type,'uint16')
      sd = nrrdStructure.spacedirections;
      orig = nrrdStructure.spaceorigin;
      fid = fopen(fullfile(dn, [fn '.nhdr']), 'w');
      fprintf(fid, ['NRRD0005\n' ...
                    '# Complete NRRD file format specification at:\n' ...
                    '# http://teem.sourceforge.net/nrrd/format.html\n' ...
                    'type: short\n' ...
                    'dimension: 4\n' ...
                    'space: left-posterior-superior\n' ...
                    'sizes: %d %d %d %d\n' ...
                    'space directions: (%f,%f,%f) (%f,%f,%f) (%f,%f,%f) none\n' ...
                    'centerings: cell cell cell ???\n',...
                    'kinds: space space space list\n' ...
                    'endian: little\n' ...
                    'encoding: gzip\n' ...
                    'space origin: (%f,%f,%f)\n' ...
                    'measurement frame: (1,0,0) (0,1,0) (0,0,1)\n',...
                    'space units: "mm" "mm" "mm"\n',...
                    'data file: %s.raw.gz\n'...
                    'modality:=DWMRI\n' ...
                    'DWMRI_b-value:=%d\n'], ...
              size(nrrdStructure.data,1), size(nrrdStructure.data,2), size(nrrdStructure.data,3), size(nrrdStructure.data,4),...
              sd(1,1),sd(2,1),sd(3,1),sd(2,1),sd(2,2),sd(3,2),sd(3,1),sd(3,2),sd(3,3),orig(1),orig(2),orig(3),fn,nrrdStructure.bvalue);

      for j = 1:size(nrrdStructure.gradients,1)
        fprintf(fid,'DWMRI_gradient_%04d:= %f %f %f\n',j-1,nrrdStructure.gradients(j,1),nrrdStructure.gradients(j,2),nrrdStructure.gradients(j,3));
      end
      fclose(fid);
      fwrite(fid1, uint16(nrrdStructure.data), 'uint16');
  end


  if strcmp(type,'headerOnly')
      sd = nrrdStructure.spacedirections;
      orig = nrrdStructure.spaceorigin;
      fid = fopen(fullfile(dn, [fn '.nhdr']), 'w');
      fprintf(fid, ['NRRD0005\n' ...
                    '# Complete NRRD file format specification at:\n' ...
                    '# http://teem.sourceforge.net/nrrd/format.html\n' ...
                    'type: short\n' ...
                    'dimension: 4\n' ...
                    'space: left-posterior-superior\n' ...
                    'sizes: %d %d %d %d\n' ...
                    'space directions: (%f,%f,%f) (%f,%f,%f) (%f,%f,%f) none\n' ...
                    'centerings: cell cell cell ???\n',...
                    'kinds: space space space list\n' ...
                    'endian: little\n' ...
                    'encoding: gzip\n' ...
                    'space origin: (%f,%f,%f)\n' ...
                    'measurement frame: (-1,0,0) (0,-1,0) (0,0,1)\n',...
                    'space units: "mm" "mm" "mm"\n',...
                    'data file: %s\n'...
                    'modality:=DWMRI\n' ...
                    'DWMRI_b-value:=%d\n'], ...
              nrrdStructure.size(1), nrrdStructure.size(2), nrrdStructure.size(3), nrrdStructure.size(4),...
              sd(1,1),sd(2,1),sd(3,1),sd(2,1),sd(2,2),sd(3,2),sd(3,1),sd(3,2),sd(3,3),orig(1),orig(2),orig(3),fn,nrrdStructure.bvalue);

      for j = 1:size(nrrdStructure.gradients,1)
        fprintf(fid,'DWMRI_gradient_%04d:= %f %f %f\n',j-1,nrrdStructure.gradients(j,1),nrrdStructure.gradients(j,2),nrrdStructure.gradients(j,3));
      end
      fclose(fid);
  else
    fclose(fid1);
    system(['rm -f ' fullfile(dn, [fn '.raw.gz']) ' && gzip ' fullfile(dn, [fn '.raw'])]); % compress
  end

end
